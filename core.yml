--- 
GENERATOR: 
  PackageName: core
  PackageDescription: "Package core provides Go bindings for libpd â€” Pure Data embeddable audio synthesis library."
  PackageLicense: "THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS."
  Includes: [z_libpd.h]
  FlagGroups:
    - {name: "LDFLAGS", flags: [-lpd]}

PARSER: 
  IncludePaths: [/usr/include]
  SourcesPaths: [core/z_libpd.h]

TRANSLATOR: 
  ConstRules: 
    defines: expand
    enum: eval
  Rules: 
    global: 
      - {transform: lower}
      - {action: accept, from: "^libpd_"}
      - {action: replace, from: "^libpd_", to: _}
      # proper camel case namings
      - {action: replace, from: "file$", to: File}
      - {action: replace, from: "size$", to: Size}
      - {action: replace, from: "dollarzero$", to: DollarZero}
      - {action: replace, from: "noteonhook$", to: NoteOnHook}
      - {action: replace, from: "controlchangehook$", to: ControlChangeHook}
      - {action: replace, from: "programchangehook$", to: ProgramChangeHook}
      - {action: replace, from: "pitchbendhook$", to: PitchbendHook}
      - {action: replace, from: "aftertouchhook$", to: AftertouchHook}
      - {action: replace, from: "polyaftertouchhook$", to: PolyAftertouchHook}
      - {action: replace, from: "midibytehook$", to: MIDIByteHook}
      - {action: replace, from: "printhook$", to: PrintHook}
      - {action: replace, from: "banghook$", to: BangHook}
      - {action: replace, from: "floathook$", to: FloatHook}
      - {action: replace, from: "symbolhook$", to: SymbolHook}
      - {action: replace, from: "listhook$", to: ListHook}
      - {action: replace, from: "messagehook$", to: MessageHook}
      - {action: replace, from: "noteon$", to: NoteOn}
      - {action: replace, from: "controlchange$", to: ControlChange}
      - {action: replace, from: "programchange$", to: ProgramChange}
      - {action: replace, from: "pitchbend$", to: Pitchbend}
      - {action: replace, from: "aftertouch$", to: Aftertouch}
      - {action: replace, from: "polyaftertouch$", to: PolyAftertouch}
      - {action: replace, from: "midibyte$", to: MIDIByte}
      - {action: replace, from: "sysex$", to: SysEx}
      - {action: replace, from: "sysrealtime$", to: SysRealtime}
    const:
      - {action: accept, from: A_}
      - {action: ignore, from: A_DEFSYMBOL}
      - {action: replace, from: ^a_, to: Atom_}
    type: 
      - {action: accept, from: "^t_libpd_"}
      - {action: replace, from: "^t_libpd_", to: _}
      - {action: accept, from: "^t_atomtype"}
      - {action: replace, from: "^t_", to: _}
      - {action: replace, from: "type$", to: Type}
    private:
      - {transform: unexport}
    post-global: 
      - {action: replace, from: _$}
      - {load: snakecase}
      - {transform: export}
